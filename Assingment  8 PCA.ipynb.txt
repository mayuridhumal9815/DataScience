{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6bc77110",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "from sklearn.decomposition import PCA\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import scale "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ad91b058",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Alcohol</th>\n",
       "      <th>Malic</th>\n",
       "      <th>Ash</th>\n",
       "      <th>Alcalinity</th>\n",
       "      <th>Magnesium</th>\n",
       "      <th>Phenols</th>\n",
       "      <th>Flavanoids</th>\n",
       "      <th>Nonflavanoids</th>\n",
       "      <th>Proanthocyanins</th>\n",
       "      <th>Color</th>\n",
       "      <th>Hue</th>\n",
       "      <th>Dilution</th>\n",
       "      <th>Proline</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>14.23</td>\n",
       "      <td>1.71</td>\n",
       "      <td>2.43</td>\n",
       "      <td>15.6</td>\n",
       "      <td>127</td>\n",
       "      <td>2.80</td>\n",
       "      <td>3.06</td>\n",
       "      <td>0.28</td>\n",
       "      <td>2.29</td>\n",
       "      <td>5.64</td>\n",
       "      <td>1.04</td>\n",
       "      <td>3.92</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>13.20</td>\n",
       "      <td>1.78</td>\n",
       "      <td>2.14</td>\n",
       "      <td>11.2</td>\n",
       "      <td>100</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0.26</td>\n",
       "      <td>1.28</td>\n",
       "      <td>4.38</td>\n",
       "      <td>1.05</td>\n",
       "      <td>3.40</td>\n",
       "      <td>1050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>13.16</td>\n",
       "      <td>2.36</td>\n",
       "      <td>2.67</td>\n",
       "      <td>18.6</td>\n",
       "      <td>101</td>\n",
       "      <td>2.80</td>\n",
       "      <td>3.24</td>\n",
       "      <td>0.30</td>\n",
       "      <td>2.81</td>\n",
       "      <td>5.68</td>\n",
       "      <td>1.03</td>\n",
       "      <td>3.17</td>\n",
       "      <td>1185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>14.37</td>\n",
       "      <td>1.95</td>\n",
       "      <td>2.50</td>\n",
       "      <td>16.8</td>\n",
       "      <td>113</td>\n",
       "      <td>3.85</td>\n",
       "      <td>3.49</td>\n",
       "      <td>0.24</td>\n",
       "      <td>2.18</td>\n",
       "      <td>7.80</td>\n",
       "      <td>0.86</td>\n",
       "      <td>3.45</td>\n",
       "      <td>1480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>13.24</td>\n",
       "      <td>2.59</td>\n",
       "      <td>2.87</td>\n",
       "      <td>21.0</td>\n",
       "      <td>118</td>\n",
       "      <td>2.80</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.39</td>\n",
       "      <td>1.82</td>\n",
       "      <td>4.32</td>\n",
       "      <td>1.04</td>\n",
       "      <td>2.93</td>\n",
       "      <td>735</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Type  Alcohol  Malic   Ash  Alcalinity  Magnesium  Phenols  Flavanoids  \\\n",
       "0     1    14.23   1.71  2.43        15.6        127     2.80        3.06   \n",
       "1     1    13.20   1.78  2.14        11.2        100     2.65        2.76   \n",
       "2     1    13.16   2.36  2.67        18.6        101     2.80        3.24   \n",
       "3     1    14.37   1.95  2.50        16.8        113     3.85        3.49   \n",
       "4     1    13.24   2.59  2.87        21.0        118     2.80        2.69   \n",
       "\n",
       "   Nonflavanoids  Proanthocyanins  Color   Hue  Dilution  Proline  \n",
       "0           0.28             2.29   5.64  1.04      3.92     1065  \n",
       "1           0.26             1.28   4.38  1.05      3.40     1050  \n",
       "2           0.30             2.81   5.68  1.03      3.17     1185  \n",
       "3           0.24             2.18   7.80  0.86      3.45     1480  \n",
       "4           0.39             1.82   4.32  1.04      2.93      735  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data= pd.read_csv(\"wine.csv\")\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e0530232",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 178 entries, 0 to 177\n",
      "Data columns (total 14 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   Type             178 non-null    int64  \n",
      " 1   Alcohol          178 non-null    float64\n",
      " 2   Malic            178 non-null    float64\n",
      " 3   Ash              178 non-null    float64\n",
      " 4   Alcalinity       178 non-null    float64\n",
      " 5   Magnesium        178 non-null    int64  \n",
      " 6   Phenols          178 non-null    float64\n",
      " 7   Flavanoids       178 non-null    float64\n",
      " 8   Nonflavanoids    178 non-null    float64\n",
      " 9   Proanthocyanins  178 non-null    float64\n",
      " 10  Color            178 non-null    float64\n",
      " 11  Hue              178 non-null    float64\n",
      " 12  Dilution         178 non-null    float64\n",
      " 13  Proline          178 non-null    int64  \n",
      "dtypes: float64(11), int64(3)\n",
      "memory usage: 19.6 KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6275112d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def norm(i):\n",
    "    x=(i-i.min())/(i.max()-i.min())\n",
    "    return (x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e3c2a863",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Alcohol</th>\n",
       "      <th>Malic</th>\n",
       "      <th>Ash</th>\n",
       "      <th>Alcalinity</th>\n",
       "      <th>Magnesium</th>\n",
       "      <th>Phenols</th>\n",
       "      <th>Flavanoids</th>\n",
       "      <th>Nonflavanoids</th>\n",
       "      <th>Proanthocyanins</th>\n",
       "      <th>Color</th>\n",
       "      <th>Hue</th>\n",
       "      <th>Dilution</th>\n",
       "      <th>Proline</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.842105</td>\n",
       "      <td>0.191700</td>\n",
       "      <td>0.572193</td>\n",
       "      <td>0.257732</td>\n",
       "      <td>0.619565</td>\n",
       "      <td>0.627586</td>\n",
       "      <td>0.573840</td>\n",
       "      <td>0.283019</td>\n",
       "      <td>0.593060</td>\n",
       "      <td>0.372014</td>\n",
       "      <td>0.455285</td>\n",
       "      <td>0.970696</td>\n",
       "      <td>0.561341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.571053</td>\n",
       "      <td>0.205534</td>\n",
       "      <td>0.417112</td>\n",
       "      <td>0.030928</td>\n",
       "      <td>0.326087</td>\n",
       "      <td>0.575862</td>\n",
       "      <td>0.510549</td>\n",
       "      <td>0.245283</td>\n",
       "      <td>0.274448</td>\n",
       "      <td>0.264505</td>\n",
       "      <td>0.463415</td>\n",
       "      <td>0.780220</td>\n",
       "      <td>0.550642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.560526</td>\n",
       "      <td>0.320158</td>\n",
       "      <td>0.700535</td>\n",
       "      <td>0.412371</td>\n",
       "      <td>0.336957</td>\n",
       "      <td>0.627586</td>\n",
       "      <td>0.611814</td>\n",
       "      <td>0.320755</td>\n",
       "      <td>0.757098</td>\n",
       "      <td>0.375427</td>\n",
       "      <td>0.447154</td>\n",
       "      <td>0.695971</td>\n",
       "      <td>0.646933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.878947</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.609626</td>\n",
       "      <td>0.319588</td>\n",
       "      <td>0.467391</td>\n",
       "      <td>0.989655</td>\n",
       "      <td>0.664557</td>\n",
       "      <td>0.207547</td>\n",
       "      <td>0.558360</td>\n",
       "      <td>0.556314</td>\n",
       "      <td>0.308943</td>\n",
       "      <td>0.798535</td>\n",
       "      <td>0.857347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.581579</td>\n",
       "      <td>0.365613</td>\n",
       "      <td>0.807487</td>\n",
       "      <td>0.536082</td>\n",
       "      <td>0.521739</td>\n",
       "      <td>0.627586</td>\n",
       "      <td>0.495781</td>\n",
       "      <td>0.490566</td>\n",
       "      <td>0.444795</td>\n",
       "      <td>0.259386</td>\n",
       "      <td>0.455285</td>\n",
       "      <td>0.608059</td>\n",
       "      <td>0.325963</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Alcohol     Malic       Ash  Alcalinity  Magnesium   Phenols  Flavanoids  \\\n",
       "0  0.842105  0.191700  0.572193    0.257732   0.619565  0.627586    0.573840   \n",
       "1  0.571053  0.205534  0.417112    0.030928   0.326087  0.575862    0.510549   \n",
       "2  0.560526  0.320158  0.700535    0.412371   0.336957  0.627586    0.611814   \n",
       "3  0.878947  0.239130  0.609626    0.319588   0.467391  0.989655    0.664557   \n",
       "4  0.581579  0.365613  0.807487    0.536082   0.521739  0.627586    0.495781   \n",
       "\n",
       "   Nonflavanoids  Proanthocyanins     Color       Hue  Dilution   Proline  \n",
       "0       0.283019         0.593060  0.372014  0.455285  0.970696  0.561341  \n",
       "1       0.245283         0.274448  0.264505  0.463415  0.780220  0.550642  \n",
       "2       0.320755         0.757098  0.375427  0.447154  0.695971  0.646933  \n",
       "3       0.207547         0.558360  0.556314  0.308943  0.798535  0.857347  \n",
       "4       0.490566         0.444795  0.259386  0.455285  0.608059  0.325963  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_norm=norm(data.iloc[:,1:])\n",
    "data_norm.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cba54a1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_norm=data_norm.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "529e8965",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.70633576, -0.25319275,  0.02409269,  0.01326313, -0.02657958,\n",
       "        -0.07436449],\n",
       "       [-0.4849768 , -0.00882289, -0.28048205,  0.07589824, -0.23863445,\n",
       "        -0.0718773 ],\n",
       "       [-0.52117227, -0.18918722,  0.19621674, -0.01578386,  0.04504488,\n",
       "         0.08711639],\n",
       "       ...,\n",
       "       [ 0.62631289, -0.54685701, -0.03049476,  0.17013732,  0.0737382 ,\n",
       "         0.03170277],\n",
       "       [ 0.5729911 , -0.42551609, -0.09453672, -0.13739317,  0.15055918,\n",
       "         0.11225401],\n",
       "       [ 0.701764  , -0.51350498,  0.29390996, -0.08137147, -0.02513817,\n",
       "         0.0906167 ]])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 6)\n",
    "pca_values = pca.fit_transform(df_norm)\n",
    "pca_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "77ef12bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.40749485, 0.18970352, 0.08561671, 0.07426678, 0.05565301,\n",
       "       0.04658837])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "var = pca.explained_variance_ratio_\n",
    "var"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8b4de3cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([40.75, 59.72, 68.28, 75.71, 81.28, 85.94])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "var1 = np.cumsum(np.round(var,decimals = 4)*100)\n",
    "var1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "26316212",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.13336766,  0.24851581, -0.00073917,  0.17783862, -0.08865728,\n",
       "        -0.39507087, -0.41458979,  0.33310861, -0.2529021 ,  0.09232904,\n",
       "        -0.25113726, -0.4734921 , -0.28686211],\n",
       "       [-0.55088368, -0.22739058, -0.1630912 ,  0.07977633, -0.18816566,\n",
       "        -0.07414473, -0.00100692, -0.00996037, -0.03141788, -0.5197075 ,\n",
       "         0.23720622,  0.21556225, -0.44388836],\n",
       "       [-0.08384838,  0.49203927,  0.40300937,  0.47724241,  0.0065507 ,\n",
       "         0.25306514,  0.19610546,  0.28598186,  0.22834235, -0.03309997,\n",
       "        -0.10658878,  0.29777629, -0.15196829],\n",
       "       [-0.04032815,  0.48603202, -0.24197565, -0.08169399,  0.01588017,\n",
       "        -0.05264323, -0.02703323, -0.70909528,  0.07657367, -0.02632204,\n",
       "        -0.35249801,  0.08206201, -0.2297925 ],\n",
       "       [-0.27801009, -0.41288996,  0.2863938 ,  0.41830488,  0.47089872,\n",
       "        -0.01802978,  0.00257298, -0.36003786,  0.14866588,  0.20058243,\n",
       "        -0.07716208, -0.26339648, -0.0765558 ],\n",
       "       [-0.13725432, -0.21310279, -0.30096468, -0.13560977, -0.31251865,\n",
       "         0.28360441,  0.14704479,  0.19723176,  0.5031153 ,  0.3880319 ,\n",
       "        -0.28304142, -0.16727805, -0.27634879]])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca.components_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "06051731",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1ffc6332550>]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(var1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "99f1609b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-7.06335756e-01, -2.53192753e-01,  2.40926932e-02],\n",
       "       [-4.84976802e-01, -8.82289142e-03, -2.80482048e-01],\n",
       "       [-5.21172266e-01, -1.89187222e-01,  1.96216736e-01],\n",
       "       [-8.21643663e-01, -5.80905512e-01,  8.11097172e-02],\n",
       "       [-2.02546382e-01, -5.94665740e-02,  3.00239941e-01],\n",
       "       [-6.08190152e-01, -4.87519191e-01, -7.54332321e-02],\n",
       "       [-5.44047399e-01, -3.00196497e-01, -1.05074621e-01],\n",
       "       [-4.74357495e-01, -2.98197021e-01, -2.82149308e-03],\n",
       "       [-5.00432012e-01, -3.07602859e-01, -2.30493613e-01],\n",
       "       [-6.27517969e-01, -2.06328233e-01, -1.14147932e-01],\n",
       "       [-7.27467157e-01, -3.56512044e-01, -5.04199490e-02],\n",
       "       [-3.74967744e-01, -2.25424535e-01, -2.86134083e-01],\n",
       "       [-4.48188283e-01, -2.31938139e-01, -1.67908053e-01],\n",
       "       [-6.26345329e-01, -3.55138677e-01, -8.58356579e-02],\n",
       "       [-8.35717011e-01, -5.38047802e-01, -1.15202943e-01],\n",
       "       [-4.71931568e-01, -3.37405385e-01, -7.27821607e-02],\n",
       "       [-4.26990905e-01, -4.50842684e-01,  5.44365527e-02],\n",
       "       [-3.66595704e-01, -3.15750341e-01,  5.36790513e-02],\n",
       "       [-7.18788533e-01, -5.93881332e-01, -9.66475568e-02],\n",
       "       [-4.58884986e-01, -1.75782240e-01,  4.61890181e-02],\n",
       "       [-6.61852288e-01, -1.27831032e-01, -1.21342296e-02],\n",
       "       [-2.67900032e-01,  9.81127565e-03,  2.68433962e-01],\n",
       "       [-5.99782399e-01,  7.82494523e-04, -3.71825478e-03],\n",
       "       [-4.17894800e-01,  1.13786901e-01, -3.76813193e-02],\n",
       "       [-4.49940392e-01,  9.83771974e-02,  1.19184786e-01],\n",
       "       [-2.15787795e-01,  9.26270331e-03,  4.74744972e-01],\n",
       "       [-4.15531996e-01, -1.55470385e-01, -7.11747961e-03],\n",
       "       [-2.83946970e-01, -8.97364262e-02, -2.71605692e-01],\n",
       "       [-4.75099227e-01, -8.80516479e-02,  1.86621472e-01],\n",
       "       [-5.14396469e-01, -1.04602502e-01, -1.20472516e-01],\n",
       "       [-5.20965812e-01, -2.58430884e-01,  1.08979008e-01],\n",
       "       [-5.75738233e-01, -3.61155788e-01, -1.13266908e-01],\n",
       "       [-3.02144639e-01, -5.14943064e-02, -4.32229678e-02],\n",
       "       [-3.67021971e-01, -2.68616630e-01,  8.59977967e-02],\n",
       "       [-3.03022468e-01, -1.21413202e-01, -5.01639070e-02],\n",
       "       [-4.58338878e-01, -3.03098822e-02,  7.90300425e-02],\n",
       "       [-2.71566325e-01, -7.61238406e-02, -5.05401695e-02],\n",
       "       [-2.32004189e-01, -5.03302763e-02, -1.46445445e-01],\n",
       "       [-3.05480403e-01,  6.16775563e-02, -3.00866231e-01],\n",
       "       [-5.19605033e-01, -3.13830061e-01,  1.67670550e-01],\n",
       "       [-5.30575114e-01, -1.29536623e-01,  7.98787590e-02],\n",
       "       [-1.87044526e-01, -1.24830306e-01,  6.65891996e-02],\n",
       "       [-7.05508197e-01, -2.36951582e-01, -2.76987114e-03],\n",
       "       [-1.11517299e-01, -6.93158637e-02,  1.90046567e-01],\n",
       "       [-4.67360652e-01, -4.17305795e-03, -1.29993016e-02],\n",
       "       [-2.90122801e-01, -3.67221063e-01,  2.06461390e-01],\n",
       "       [-5.83259370e-01, -3.09000481e-01,  1.60283159e-01],\n",
       "       [-6.20279029e-01, -1.93810631e-01, -8.48239402e-02],\n",
       "       [-3.94822370e-01, -2.93598970e-01,  1.43053893e-02],\n",
       "       [-5.59620161e-01, -4.08270579e-01, -5.25399819e-02],\n",
       "       [-6.31721343e-01, -1.53075104e-01, -2.56893756e-01],\n",
       "       [-6.19429907e-01, -1.89577074e-01, -6.39705192e-02],\n",
       "       [-7.31057466e-01, -3.52882173e-01,  2.11611968e-02],\n",
       "       [-4.46372391e-01, -3.75445367e-01,  1.30896875e-02],\n",
       "       [-4.72271686e-01, -2.17583775e-01, -1.67029793e-01],\n",
       "       [-5.26519475e-01, -2.47353412e-01,  3.82178438e-02],\n",
       "       [-5.80922838e-01, -2.96118382e-01, -3.48563184e-02],\n",
       "       [-4.56499660e-01, -2.54172861e-01,  3.38969715e-03],\n",
       "       [-6.68673306e-01, -3.73626692e-01, -6.87172588e-02],\n",
       "       [ 2.36612131e-01,  4.15897679e-01, -8.35821066e-01],\n",
       "       [ 4.11083017e-01,  2.39042056e-01, -3.26347681e-01],\n",
       "       [ 4.53466145e-01,  1.15387043e-01, -3.39942569e-01],\n",
       "       [-1.02908723e-02,  1.44058312e-01, -3.89284454e-01],\n",
       "       [-4.53680708e-01,  3.58591310e-01, -4.15914229e-02],\n",
       "       [ 1.85889069e-01,  4.31970612e-01, -1.20130348e-01],\n",
       "       [-1.32514400e-01,  1.77025232e-01, -5.75362841e-02],\n",
       "       [-4.81660733e-01,  2.48221509e-01, -2.11338721e-01],\n",
       "       [-1.37359790e-01,  4.31281611e-01, -1.93935013e-01],\n",
       "       [ 2.20157829e-01,  2.60739073e-02, -2.72596418e-01],\n",
       "       [-3.45031544e-01,  3.16134486e-01, -3.82199375e-01],\n",
       "       [ 3.67943408e-01,  1.55916428e-01, -3.06832931e-01],\n",
       "       [-4.08324351e-01,  2.21997603e-01,  1.96396926e-01],\n",
       "       [ 7.54211315e-02,  1.96129620e-01, -7.80122962e-02],\n",
       "       [-5.99276557e-01,  8.58331792e-02,  3.60284036e-01],\n",
       "       [-4.59562261e-01,  2.77406318e-01, -5.31956187e-02],\n",
       "       [ 2.31860903e-01,  4.39499276e-01, -3.56482405e-01],\n",
       "       [-6.49397655e-02,  3.10816394e-01, -4.68782074e-01],\n",
       "       [ 3.23736371e-01,  3.22191312e-01, -5.14613008e-02],\n",
       "       [-1.33928622e-01,  1.67857293e-01, -3.20328347e-01],\n",
       "       [-8.63464614e-02,  2.50941891e-01,  4.54337877e-01],\n",
       "       [-1.87477316e-01,  6.49776372e-01, -1.55435552e-01],\n",
       "       [-2.53589040e-01,  2.49115557e-01, -8.16831222e-02],\n",
       "       [ 6.45922121e-02,  4.87258389e-01,  7.70465735e-03],\n",
       "       [ 5.68567489e-01, -2.72502414e-03,  2.41859593e-01],\n",
       "       [-2.07555330e-01,  3.83332423e-01, -3.30390310e-02],\n",
       "       [-1.84826649e-01,  4.18166208e-01, -1.68233517e-01],\n",
       "       [ 1.94604609e-01,  4.44698701e-01, -4.40682697e-02],\n",
       "       [ 4.97903090e-02,  5.58265148e-01,  1.88614972e-01],\n",
       "       [ 2.01995378e-01,  3.91867103e-01,  1.01233892e-01],\n",
       "       [ 2.60011770e-02,  5.20397483e-01,  7.47890061e-02],\n",
       "       [ 3.20777030e-01,  4.07964175e-01, -6.98967176e-02],\n",
       "       [ 3.21433432e-01,  4.14255535e-01,  1.77255582e-02],\n",
       "       [ 4.41539233e-01,  2.80747043e-01, -7.72974958e-02],\n",
       "       [-1.83814799e-01,  4.70714917e-01,  1.01666319e-01],\n",
       "       [-2.34623773e-01,  4.82068800e-01, -3.77236891e-02],\n",
       "       [-3.98762991e-01,  6.68359472e-02, -1.35977065e-02],\n",
       "       [ 1.32311032e-01,  2.33219802e-01, -1.05380527e-01],\n",
       "       [-2.03237436e-01,  4.46450045e-01, -1.97838355e-01],\n",
       "       [-4.91302147e-01,  2.39224247e-01, -3.26710957e-02],\n",
       "       [-2.22211504e-01,  4.05617951e-01,  2.77418048e-01],\n",
       "       [-1.78415144e-01,  3.83375676e-01, -2.46225604e-01],\n",
       "       [ 8.82037061e-02,  3.91561686e-01, -3.33937679e-01],\n",
       "       [-4.59627898e-02,  3.16898298e-01,  2.14413034e-01],\n",
       "       [ 1.27165257e-01,  4.86899646e-01, -1.18500840e-01],\n",
       "       [-1.68359803e-01,  3.79932119e-01, -3.96785853e-02],\n",
       "       [ 3.34941838e-01,  4.01936155e-01,  2.97773404e-01],\n",
       "       [ 3.08559770e-02,  4.12679142e-01, -7.05891000e-02],\n",
       "       [ 3.31338297e-01,  2.69832520e-01, -2.26542234e-03],\n",
       "       [-3.25248675e-02,  4.59852304e-01, -2.58640393e-02],\n",
       "       [-3.63261832e-01,  3.91179206e-01,  2.04869769e-01],\n",
       "       [-2.58928676e-01,  2.82827496e-01,  2.96623319e-01],\n",
       "       [ 1.22122333e-03,  3.83225395e-01,  4.17794196e-02],\n",
       "       [ 3.11152099e-01,  2.70193984e-01,  2.17647294e-01],\n",
       "       [ 9.92201563e-02,  5.07021835e-01, -2.50921420e-02],\n",
       "       [ 1.87326999e-02,  4.56899550e-01,  1.71632372e-01],\n",
       "       [-6.13720074e-02,  7.77543093e-01,  1.19972783e-01],\n",
       "       [-2.53109370e-02,  5.59167632e-01, -7.61543923e-02],\n",
       "       [ 1.25729314e-03,  4.42898174e-01,  2.61314493e-02],\n",
       "       [ 5.12737594e-01,  1.71179320e-01, -1.53565684e-01],\n",
       "       [ 9.10642272e-02,  4.11366678e-01,  9.96796260e-02],\n",
       "       [-2.20708758e-01,  3.59648556e-01,  2.59844294e-01],\n",
       "       [-3.57855636e-01,  2.43309637e-01,  8.42716998e-01],\n",
       "       [ 1.96736866e-01,  2.68406268e-01,  6.16934914e-01],\n",
       "       [ 4.66832534e-02,  1.02594073e-01,  5.03622760e-01],\n",
       "       [-2.76379590e-01,  3.48247689e-01,  5.37753132e-01],\n",
       "       [-5.80494972e-02,  4.43300887e-01,  1.64156604e-01],\n",
       "       [-5.61569953e-02,  2.89123497e-01,  1.73356777e-01],\n",
       "       [ 3.18351542e-01,  3.69040098e-01,  4.57377787e-01],\n",
       "       [ 6.16894441e-02,  4.30372899e-01,  1.83272862e-01],\n",
       "       [ 3.35113252e-01,  2.33117539e-01,  2.95707037e-01],\n",
       "       [ 3.38878410e-01, -1.63054182e-02, -4.79279883e-01],\n",
       "       [ 5.25473386e-01, -6.85182058e-02, -2.43307989e-01],\n",
       "       [ 6.10608687e-01, -3.87597325e-02, -2.15905351e-01],\n",
       "       [ 4.70503301e-01, -7.80055196e-02, -1.83536000e-01],\n",
       "       [ 5.59522391e-01,  4.55607505e-02, -2.45582167e-01],\n",
       "       [ 7.00887626e-01, -1.05783625e-01, -1.50630859e-01],\n",
       "       [ 8.68367098e-01, -4.07280841e-02,  8.93501911e-02],\n",
       "       [ 8.62780923e-01, -7.82006550e-02,  4.55886195e-01],\n",
       "       [ 6.83749542e-01, -1.33888807e-01, -4.14526159e-02],\n",
       "       [ 4.90719365e-01,  5.56742597e-04,  1.77978734e-01],\n",
       "       [ 5.69453098e-01,  5.36461511e-03,  5.77923213e-02],\n",
       "       [ 4.24677352e-01, -9.95305796e-02, -1.81825789e-01],\n",
       "       [ 6.15620030e-01, -4.77516359e-02,  8.84780308e-02],\n",
       "       [ 5.22173329e-01, -1.38443762e-01,  1.55467738e-01],\n",
       "       [ 4.77614572e-01, -2.27298230e-01, -1.56309972e-01],\n",
       "       [ 5.79679657e-01, -1.57739251e-01, -8.44694328e-02],\n",
       "       [ 9.15216446e-01, -2.14231373e-01, -7.52525382e-02],\n",
       "       [ 7.36788844e-01, -2.52267555e-01,  1.53564951e-01],\n",
       "       [ 6.03862841e-01, -3.27962913e-01, -7.15404405e-04],\n",
       "       [ 6.54244135e-01, -3.78555154e-01, -4.59399169e-02],\n",
       "       [ 5.20842263e-01, -3.83062058e-01, -6.03885819e-02],\n",
       "       [ 5.49621418e-01, -3.34917377e-01, -1.34801184e-01],\n",
       "       [ 4.06086595e-01, -1.90280414e-01,  9.63300475e-03],\n",
       "       [ 6.67875156e-01, -4.47135704e-01,  1.32207978e-02],\n",
       "       [ 6.26785798e-01, -8.89615490e-02, -2.70046574e-01],\n",
       "       [ 8.17055087e-01, -3.91798468e-01,  2.51375642e-01],\n",
       "       [ 6.50979872e-01, -4.12211745e-01,  7.12472619e-02],\n",
       "       [ 7.13430627e-01, -2.04371473e-01,  2.48155448e-01],\n",
       "       [ 2.56575999e-01, -6.45305842e-01,  2.48195757e-01],\n",
       "       [ 3.73642517e-01, -4.43532276e-01,  1.18289977e-01],\n",
       "       [ 6.75012039e-01, -1.43459280e-01,  1.27050764e-01],\n",
       "       [ 5.17484679e-01, -2.29187276e-01, -4.05135616e-02],\n",
       "       [ 6.26069565e-01, -4.62805195e-02,  1.40376429e-01],\n",
       "       [ 5.79008532e-01, -1.39074816e-01, -1.41461865e-01],\n",
       "       [ 6.24375675e-01, -3.48868312e-01, -1.59914402e-01],\n",
       "       [ 7.66349788e-01, -2.23018532e-01,  7.28732854e-02],\n",
       "       [ 5.63011192e-01, -4.76565598e-01,  7.38944930e-02],\n",
       "       [ 6.24388906e-01, -2.88769367e-01, -1.43864266e-01],\n",
       "       [ 4.72514206e-01, -3.60781032e-01,  2.12186739e-02],\n",
       "       [ 4.82393361e-01, -4.15988803e-01,  2.50430782e-01],\n",
       "       [ 6.79182280e-01,  6.57518884e-02, -1.68719824e-01],\n",
       "       [ 7.74530367e-01, -1.81913660e-01, -2.12942019e-01],\n",
       "       [ 5.37656394e-01, -4.62404696e-01, -1.37018996e-01],\n",
       "       [ 7.39509503e-01, -4.71901149e-01,  2.09360327e-01],\n",
       "       [ 5.81781139e-01, -3.48365752e-01,  8.35902851e-02],\n",
       "       [ 6.26312888e-01, -5.46857013e-01, -3.04947552e-02],\n",
       "       [ 5.72991102e-01, -4.25516087e-01, -9.45367174e-02],\n",
       "       [ 7.01763997e-01, -5.13504983e-01,  2.93909961e-01]])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data=pca_values[:,0:3]\n",
    "new_data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "811b6375",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy.cluster.hierarchy as sch\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt\n",
    "import seaborn as sn\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8d0253b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import DBSCAN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8faf89cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DBSCAN(eps=2, min_samples=6)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan = DBSCAN(eps=2, min_samples=6)\n",
    "dbscan.fit(new_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4924c5ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0], dtype=int64)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dbscan.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "d851f908",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d1= sch.dendrogram(sch.linkage(new_data, method='single'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "390972c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d2=sch.dendrogram(sch.linkage(new_data,method='complete'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "75fad45d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0236cbed",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Pritam\\anaconda3\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:881: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "wcss = []\n",
    "for i in range(1, 11):\n",
    "    kmeans = KMeans(n_clusters=i,random_state=0)\n",
    "    kmeans.fit(new_data)\n",
    "    wcss.append(kmeans.inertia_)\n",
    "    \n",
    "plt.plot(range(1, 11), wcss)\n",
    "plt.title('Elbow Method')\n",
    "plt.xlabel('Number of clusters')\n",
    "plt.ylabel('WCSS')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "c982aaa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=4, random_state=42)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clusters_k = KMeans(4,random_state=42)\n",
    "clusters_k.fit(new_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "959497fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,\n",
       "       0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 3, 1, 1,\n",
       "       0, 1, 1, 1, 1, 3, 1, 3, 3, 1, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 3, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 3,\n",
       "       3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 3, 3, 3, 3, 1, 3, 1, 1, 1, 2, 2,\n",
       "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
       "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
       "       2, 2])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clusters_k.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "89cb605e",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=pd.DataFrame(new_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "12379517",
   "metadata": {},
   "outputs": [],
   "source": [
    "x['type']=data.iloc[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8f197af7",
   "metadata": {},
   "outputs": [],
   "source": [
    "x['clusters_k']=clusters_k.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a5a8004a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>type</th>\n",
       "      <th>clusters_k</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.706336</td>\n",
       "      <td>-0.253193</td>\n",
       "      <td>0.024093</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.484977</td>\n",
       "      <td>-0.008823</td>\n",
       "      <td>-0.280482</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.521172</td>\n",
       "      <td>-0.189187</td>\n",
       "      <td>0.196217</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.821644</td>\n",
       "      <td>-0.580906</td>\n",
       "      <td>0.081110</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.202546</td>\n",
       "      <td>-0.059467</td>\n",
       "      <td>0.300240</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0         1         2  type  clusters_k\n",
       "0 -0.706336 -0.253193  0.024093     1           0\n",
       "1 -0.484977 -0.008823 -0.280482     1           0\n",
       "2 -0.521172 -0.189187  0.196217     1           0\n",
       "3 -0.821644 -0.580906  0.081110     1           0\n",
       "4 -0.202546 -0.059467  0.300240     1           3"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "460576e6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}